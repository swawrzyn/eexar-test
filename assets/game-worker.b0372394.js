(function(){"use strict";const A=t=>{const e=Math.sqrt(5),n=(1+e)/2,r=(1-e)/2;return Math.round((Math.pow(n,t)-Math.pow(r,t))/e)},L=t=>{if(t<2)return!0;const e=n=>{const r=Math.round(Math.sqrt(n));return Math.pow(r,2)==n};return e(5*t*t+4)||e(5*t*t-4)},O=t=>{const e=(1+Math.sqrt(5))/2;return t<2?t:Math.round(Math.log(t*5**.5)/Math.log(e))},T=(t,e,n)=>e===n[0]?t.map(r=>r+=1):(t[n[1]]++,t),y=(t,e,n,r,a)=>{if(e<t.length-1){if(n==1){if(t[e+1]==2)n=2;else if(n!=1)throw Error}else if(n==0)throw Error;if(A(n+1)===t[e+1])return r.length+1<a?(r.push(e+1),y(t,e+1,n+1,r,a)):r.push(e+1),r;throw Error}else throw Error};var _=Object.freeze({__proto__:null,sumRowsCols:T,fibCheckRec:y,checkFibonacciRow:(t,e=5)=>{const n=t.length;let r=0;for(;r<n-1;){if(r+e>n)return[];const a=t[r];if(L(a)){let l=O(a);try{return y(t,r,l,[r],e)}catch{r++}}else r++}return[]}});const M=Symbol("Comlink.proxy"),x=Symbol("Comlink.endpoint"),H=Symbol("Comlink.releaseProxy"),d=Symbol("Comlink.thrown"),k=t=>typeof t=="object"&&t!==null||typeof t=="function",j={canHandle:t=>k(t)&&t[M],serialize(t){const{port1:e,port2:n}=new MessageChannel;return E(t,e),[n,[n]]},deserialize(t){return t.start(),I(t)}},z={canHandle:t=>k(t)&&d in t,serialize({value:t}){let e;return t instanceof Error?e={isError:!0,value:{message:t.message,name:t.name,stack:t.stack}}:e={isError:!1,value:t},[e,[]]},deserialize(t){throw t.isError?Object.assign(new Error(t.value.message),t.value):t.value}},R=new Map([["proxy",j],["throw",z]]);function E(t,e=self){e.addEventListener("message",function n(r){if(!r||!r.data)return;const{id:a,type:l,path:s}=Object.assign({path:[]},r.data),c=(r.data.argumentList||[]).map(h);let o;try{const i=s.slice(0,-1).reduce((u,m)=>u[m],t),f=s.reduce((u,m)=>u[m],t);switch(l){case"GET":o=f;break;case"SET":i[s.slice(-1)[0]]=h(r.data.value),o=!0;break;case"APPLY":o=f.apply(i,c);break;case"CONSTRUCT":{const u=new f(...c);o=q(u)}break;case"ENDPOINT":{const{port1:u,port2:m}=new MessageChannel;E(t,m),o=V(u,[u])}break;case"RELEASE":o=void 0;break;default:return}}catch(i){o={value:i,[d]:0}}Promise.resolve(o).catch(i=>({value:i,[d]:0})).then(i=>{const[f,u]=b(i);e.postMessage(Object.assign(Object.assign({},f),{id:a}),u),l==="RELEASE"&&(e.removeEventListener("message",n),P(e))})}),e.start&&e.start()}function F(t){return t.constructor.name==="MessagePort"}function P(t){F(t)&&t.close()}function I(t,e){return w(t,[],e)}function p(t){if(t)throw new Error("Proxy has been released and is not useable")}function w(t,e=[],n=function(){}){let r=!1;const a=new Proxy(n,{get(l,s){if(p(r),s===H)return()=>g(t,{type:"RELEASE",path:e.map(c=>c.toString())}).then(()=>{P(t),r=!0});if(s==="then"){if(e.length===0)return{then:()=>a};const c=g(t,{type:"GET",path:e.map(o=>o.toString())}).then(h);return c.then.bind(c)}return w(t,[...e,s])},set(l,s,c){p(r);const[o,i]=b(c);return g(t,{type:"SET",path:[...e,s].map(f=>f.toString()),value:o},i).then(h)},apply(l,s,c){p(r);const o=e[e.length-1];if(o===x)return g(t,{type:"ENDPOINT"}).then(h);if(o==="bind")return w(t,e.slice(0,-1));const[i,f]=S(c);return g(t,{type:"APPLY",path:e.map(u=>u.toString()),argumentList:i},f).then(h)},construct(l,s){p(r);const[c,o]=S(s);return g(t,{type:"CONSTRUCT",path:e.map(i=>i.toString()),argumentList:c},o).then(h)}});return a}function N(t){return Array.prototype.concat.apply([],t)}function S(t){const e=t.map(b);return[e.map(n=>n[0]),N(e.map(n=>n[1]))]}const C=new WeakMap;function V(t,e){return C.set(t,e),t}function q(t){return Object.assign(t,{[M]:!0})}function b(t){for(const[e,n]of R)if(n.canHandle(t)){const[r,a]=n.serialize(t);return[{type:"HANDLER",name:e,value:r},a]}return[{type:"RAW",value:t},C.get(t)||[]]}function h(t){switch(t.type){case"HANDLER":return R.get(t.name).deserialize(t.value);case"RAW":return t.value}}function g(t,e,n){return new Promise(r=>{const a=D();t.addEventListener("message",function l(s){!s.data||!s.data.id||s.data.id!==a||(t.removeEventListener("message",l),r(s.data))}),t.start&&t.start(),t.postMessage(Object.assign({id:a},e),n)})}function D(){return new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-")}onconnect=t=>E(_,t.ports[0])})();
